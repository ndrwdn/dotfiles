[core]
  autocrlf = input
  editor = vim
[init]
  defaultBranch = main
[user]
  name = Andrew Dean
  email = ndrwdn@gmail.com
  signingkey = 22EF34EDF6EC7C72
[color]
  diff = auto
[alias]
  co = checkout
  st = status
  cls = diff-tree --no-commit-id --name-only -r
  cma = commit --amend --no-edit
  pr = "pull --rebase"
  dc = diff --cached
  cln = clean -fxdi
  cb = fetch --prune
  lg = log --graph --pretty=format:'%C(auto)%h%C(auto)%d %C(auto)%ar (%cr) [%C(cyan)%an %C("#9fe3f2")<%ae>%C(reset)%C(auto)]% s'
  lgm = log --graph --pretty=format:'%C(auto)%h%C(auto)%d %C(auto)%ar (%cr) [%C(cyan)%an %C("#9fe3f2")<%ae>%C(reset)%C(auto)]%n%s%n%+b%-%n'
  lg2 = log --graph --pretty=format:'%C(auto)%h%C(auto)%d %C(auto)%cI [%C(cyan)%an %C("#9fe3f2")<%ae>%C(reset)%C(auto)] %s'
  lg3 = log --graph --pretty=format:'%C(auto)%h %C(auto)%aI (%cI) [%C(cyan)%an %C("#9fe3f2")<%ae>%C(reset)%C(auto)] %s%C(auto)%d'
  alias = !git config -l | grep alias
  from = !git fetch origin && git rebase origin/master
  fr = !git fetch origin && git rebase
  sv = "!f(){ cb=$(git rev-parse --abbrev-ref HEAD); git checkout -b $1; git add -A .; git commit -m $1; git checkout $cb; };f"
  ap = "!f(){ git merge -m $1 $1 && git branch -d $1 && git reset head~;  };f"
  apf = "!f(){ git merge -X theirs -m $1 $1 && git branch -d $1 && git reset head~;  };f"
  find = log --source --all -p -S
  br = branch --format '%(committerdate:iso8601-local)|%(refname:short)' --sort 'committerdate'
  sa = "!f() { clean_name=$(echo $1 | sed -e 's/[^A-Za-z0-9._-]/_/g'); git remote add -f $clean_name $1; git subtree add --prefix $2 $clean_name master --squash; };f"
  su = "!f() { clean_name=$(echo $1 | sed -e 's/[^A-Za-z0-9._-]/_/g'); git fetch $clean_name master; git subtree pull --prefix $2 $clean_name master --squash; };f"
[push]
  default = simple
[diff "blackbox"]
  textconv = gpg --use-agent -q --batch --decrypt
[diff "pdf"]
  textconv = pdfinfo
#[url "git@github.com:"]
#	insteadOf = https://github.com/
